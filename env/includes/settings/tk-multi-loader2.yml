# Copyright (c) 2017 Shotgun Software Inc.
#
# CONFIDENTIAL AND PROPRIETARY
#
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights
# not expressly granted therein are reserved by Shotgun Software Inc.

################################################################################

includes:
- ../app_locations.yml

################################################################################

# 3dsmaxplus
settings.tk-multi-loader2.3dsmaxplus: &settings_tk-multi-loader2_3dsmaxplus
  action_mappings:
    3dsmax Scene: [import, reference]
    Alembic Cache: [import]
    Image: [texture_node]
    Rendered Image: [texture_node]
    Texture: [texture_node]
  entities:
  - caption: Assets
    entity_type: Asset
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_asset_type, code]
  - caption: Shots
    entity_type: Shot
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_sequence, code]
  - caption: My Tasks
    entity_type: Task
    filters:
    - [task_assignees, is, '{context.user}']
    - [project, is, '{context.project}']
    hierarchy: [entity, content]
  location: "@apps.tk-multi-loader2.location"

# 3dsmax
# Uses the same settings, but a different hook.
settings.tk-multi-loader2.3dsmax:
  <<: *settings_tk-multi-loader2_3dsmaxplus
  actions_hook: "{engine}/tk-multi-loader2/basic/scene_actions.py"

# houdini
settings.tk-multi-loader2.houdini:
  action_mappings:
    Alembic Cache: [import]
    Houdini Scene: [merge]
    Image: [file_cop]
    Photoshop Image: [file_cop]
    Rendered Image: [file_cop]
    Texture: [file_cop]
  entities:
  - caption: Assets
    entity_type: Asset
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_asset_type, code]
  - caption: Shots
    entity_type: Shot
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_sequence, code]
  - caption: My Tasks
    entity_type: Task
    filters:
    - [task_assignees, is, '{context.user}']
    - [project, is, '{context.project}']
    hierarchy: [entity, content]
  publish_filters: [["sg_status_list", "is_not", null]]
  location: "@apps.tk-multi-loader2.location"

# maya
settings.tk-multi-loader2.maya:
  action_mappings:
    Alembic Cache: [reference, import]
    Image: [texture_node, image_plane]
    Maya Scene: [reference, import]
    Photoshop Image: [texture_node, image_plane]
    Rendered Image: [texture_node, image_plane]
    Texture: [texture_node, image_plane]
  entities:
  - caption: Assets
    entity_type: Asset
    filters:
    - [project, is, "{context.project}"]
    hierarchy: [sg_asset_type, code]
  - caption: Shots
    entity_type: Shot
    filters:
    - [project, is, "{context.project}"]
    hierarchy: [sg_sequence, code]
  - caption: My Tasks
    entity_type: Task
    filters:
    - [task_assignees, is, "{context.user}"]
    - [project, is, "{context.project}"]
    hierarchy: [entity, content]
  publish_filters: [["sg_status_list", "is_not", null]]
  location: "@apps.tk-multi-loader2.location"

# nuke
settings.tk-multi-loader2.nuke:
  action_mappings:
    Alembic Cache: [read_node]
    Flame Render: [read_node]
    Flame Quicktime: [read_node]
    Image: [read_node]
    Movie: [read_node]
    Nuke Script: [script_import]
    Photoshop Image: [read_node]
    Rendered Image: [read_node]
    Texture: [read_node]
  entities:
  - caption: Assets
    entity_type: Asset
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_asset_type, code]
  - caption: Shots
    entity_type: Shot
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_sequence, code]
  - caption: My Tasks
    entity_type: Task
    filters:
    - [task_assignees, is, '{context.user}']
    - [project, is, '{context.project}']
    hierarchy: [entity, content]
  publish_filters: [["sg_status_list", "is_not", null]]
  location: "@apps.tk-multi-loader2.location"

# photoshop
settings.tk-multi-loader2.photoshop:
  action_mappings:
    Photoshop Image: [add_as_a_layer, open_file]
    Rendered Image: [add_as_a_layer, open_file]
    Image: [add_as_a_layer, open_file]
    Texture: [add_as_a_layer, open_file]
  entities:
  - caption: Assets
    entity_type: Asset
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_asset_type, code]
  - caption: Shots
    entity_type: Shot
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_sequence, code]
  - caption: My Tasks
    entity_type: Task
    filters:
    - [task_assignees, is, '{context.user}']
    - [project, is, '{context.project}']
    hierarchy: [entity, content]
  publish_filters: [["sg_status_list", "is_not", null]]
  location: "@apps.tk-multi-loader2.location"

# after effects
settings.tk-multi-loader2.aftereffects:
  action_mappings:
    After Effects Project: [add_to_project, add_to_comp]
    Maya Scene: [add_to_project, add_to_comp]
    Photoshop Image: [add_to_project, add_to_comp]
    Rendered Image: [add_to_project, add_to_comp]
    Image: [add_to_project, add_to_comp]
    Movie: [add_to_project, add_to_comp]
    Texture: [add_to_project, add_to_comp]
  entities:
  - caption: Assets
    entity_type: Asset
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_asset_type, code]
  - caption: Shots
    entity_type: Shot
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_sequence, code]
  - caption: My Tasks
    entity_type: Task
    filters:
    - [task_assignees, is, '{context.user}']
    - [project, is, '{context.project}']
    hierarchy: [entity, content]
  actions_hook: "{engine}/tk-multi-loader2/basic/scene_actions.py"
  publish_filters: [["sg_status_list", "is_not", null]]
  location: "@apps.tk-multi-loader2.location"